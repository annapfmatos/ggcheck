% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mappings.R
\name{ith_mappings_match}
\alias{ith_mappings_match}
\title{Do the mappings of the ith layer exactly match the set supplied?}
\usage{
ith_mappings_match(p, mappings, i, local_only = TRUE)
}
\arguments{
\item{p}{A ggplot object or a layer extracted from a ggplot object with
\code{\link{get_layer}}.}

\item{mappings}{One or more aesthetic mappings created with
\code{\link[ggplot2]{aes}}.}

\item{i}{A numerical index that corresponds to the first layer of a plot (1),
the second layer (2), and so on. \code{ith_mappings_match} will check the
aesthetics used by the ith layer.}

\item{local_only}{If \code{TRUE}, \code{ith_mappings_match} will check only the
mappings defined locally in a layer for the presence of \code{mappings}. If
\code{FALSE}, \code{ith_mappings_match} will check for \code{mappings} in the
combination of global and local methods that will be used to plot a layer.}
}
\value{
A logical value
}
\description{
\code{ith_mappings_match} checks whether the student used the exact set of
supplied mappings in the ith layer of their plot. Functions that use the
\code{ith_} prefix are designed to eliminate the need to call
\code{get_layer} to check a specific layer in a plot, e.g. \code{p \%>\%
get_layer(geom = "point") \%>\% mappings_match(aes(color = class))}.
}
\examples{
p <- ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
  geom_point(mapping = aes(color = class)) +
  geom_smooth()
ith_mappings_match(p, i = 1, aes(x = displ,  y = hwy, color = class), local_only = FALSE)
ith_mappings_match(p, i = 1, aes(color = class), local_only = TRUE)
ith_mappings_match(p, i = 2, aes(x = displ, y = hwy), local_only = FALSE)
}
\seealso{
Other check mappings: 
\code{\link{get_mappings}()},
\code{\link{identical_aes}()},
\code{\link{ith_mappings_use}()},
\code{\link{ith_mappings}()},
\code{\link{mappings_match}()},
\code{\link{uses_mappings}()}
}
\concept{check mappings}
